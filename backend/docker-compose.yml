version: "3"

services:
  database:
    image: mysql
    container_name: arcadium_mysql
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ./mysql:/arcadium_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    env_file:
      - .env.development
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - tables
    networks:
      - app-network

  test_app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    env_file:
      - .env.testing
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - tables
    networks:
      - app-network

  tables:
    image: mysql
    command: 'mysql -uroot -proot -harcadium_mysql -e "
      create database if not exists development; create database if not exists testing;
    "'
    depends_on:
      - database
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    env_file:
      - .env.development
    depends_on:
      - tables
    networks:
      - app-network

networks:
  app-network:
    ipam:
      driver: default
      config:
        - subnet: 192.168.5.0/24
